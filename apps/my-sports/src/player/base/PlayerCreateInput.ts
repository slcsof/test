/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountWhereUniqueInput } from "../../account/base/AccountWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CompetitionCreateNestedManyWithoutPlayersInput } from "./CompetitionCreateNestedManyWithoutPlayersInput";
import { SponsorCreateNestedManyWithoutPlayersInput } from "./SponsorCreateNestedManyWithoutPlayersInput";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TeamCreateNestedManyWithoutPlayersInput } from "./TeamCreateNestedManyWithoutPlayersInput";
import { UserCreateNestedManyWithoutPlayersInput } from "./UserCreateNestedManyWithoutPlayersInput";

@InputType()
class PlayerCreateInput {
  @ApiProperty({
    required: true,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @Field(() => AccountWhereUniqueInput)
  accounts!: AccountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CompetitionCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => CompetitionCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => CompetitionCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  competitions?: CompetitionCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => SponsorCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => SponsorCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => SponsorCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  sponsors?: SponsorCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  starts?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TeamCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => TeamCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => TeamCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  teams?: TeamCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  votes?: InputJsonValue;
}

export { PlayerCreateInput as PlayerCreateInput };
