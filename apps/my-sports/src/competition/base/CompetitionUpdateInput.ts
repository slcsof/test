/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountWhereUniqueInput } from "../../account/base/AccountWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AthleteUpdateManyWithoutCompetitionsInput } from "./AthleteUpdateManyWithoutCompetitionsInput";
import { SponsorUpdateManyWithoutCompetitionsInput } from "./SponsorUpdateManyWithoutCompetitionsInput";
import { TeamUpdateManyWithoutCompetitionsInput } from "./TeamUpdateManyWithoutCompetitionsInput";
import { UserUpdateManyWithoutCompetitionsInput } from "./UserUpdateManyWithoutCompetitionsInput";

@InputType()
class CompetitionUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  accounts?: AccountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AthleteUpdateManyWithoutCompetitionsInput,
  })
  @ValidateNested()
  @Type(() => AthleteUpdateManyWithoutCompetitionsInput)
  @IsOptional()
  @Field(() => AthleteUpdateManyWithoutCompetitionsInput, {
    nullable: true,
  })
  athlete?: AthleteUpdateManyWithoutCompetitionsInput;

  @ApiProperty({
    required: false,
    type: () => SponsorUpdateManyWithoutCompetitionsInput,
  })
  @ValidateNested()
  @Type(() => SponsorUpdateManyWithoutCompetitionsInput)
  @IsOptional()
  @Field(() => SponsorUpdateManyWithoutCompetitionsInput, {
    nullable: true,
  })
  sponsors?: SponsorUpdateManyWithoutCompetitionsInput;

  @ApiProperty({
    required: false,
    type: () => TeamUpdateManyWithoutCompetitionsInput,
  })
  @ValidateNested()
  @Type(() => TeamUpdateManyWithoutCompetitionsInput)
  @IsOptional()
  @Field(() => TeamUpdateManyWithoutCompetitionsInput, {
    nullable: true,
  })
  team?: TeamUpdateManyWithoutCompetitionsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutCompetitionsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutCompetitionsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutCompetitionsInput, {
    nullable: true,
  })
  user?: UserUpdateManyWithoutCompetitionsInput;
}

export { CompetitionUpdateInput as CompetitionUpdateInput };
