/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountWhereUniqueInput } from "../../account/base/AccountWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AthleteUpdateManyWithoutTeamsInput } from "./AthleteUpdateManyWithoutTeamsInput";
import { CompetitionUpdateManyWithoutTeamsInput } from "./CompetitionUpdateManyWithoutTeamsInput";
import { SponsorUpdateManyWithoutTeamsInput } from "./SponsorUpdateManyWithoutTeamsInput";
import { UserUpdateManyWithoutTeamsInput } from "./UserUpdateManyWithoutTeamsInput";

@InputType()
class TeamUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  accounts?: AccountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AthleteUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => AthleteUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => AthleteUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  athlete?: AthleteUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => CompetitionUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => CompetitionUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => CompetitionUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  competitions?: CompetitionUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => SponsorUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => SponsorUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => SponsorUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  sponsors?: SponsorUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutTeamsInput;
}

export { TeamUpdateInput as TeamUpdateInput };
